x-superset-user: &superset-user root
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  # - ./superset:/app/superset
  - ./docker/superset_config.py:/app/pythonpath/superset_config.py

services:
  db:
    container_name: weather_postgres_db
    hostname: weather_postgres_db
    image: postgres:13.22
    ports:
      - "5000:5432"
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: db
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/airflow_init.sql:/docker-entrypoint-initdb.d/airflow_init.sql
      - ./postgres/superset_init.sql:/docker-entrypoint-initdb.d/superset_init.sql
    networks:
      - my-network

  airflow:
    container_name: airflow_container
    image: apache/airflow:3.0.0
    ports:
      - "8080:8080"
    environment:
      # AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@weather_postgres_db:5432/airflow_db
      # AIRFLOW__WEBSERVER__SECRET_KEY: my_secret_key
      # AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic
      WEATHERSTACK_API_KEY: ${WEATHERSTACK_API_KEY}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./api-request:/opt/airflow/api-request
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - 1001
    depends_on:
      - db
    networks:
      - my-network
    command: >
      bash -c "airflow db migrate && airflow standalone"

  dbt:
    container_name: dbt_container
    image: ghcr.io/dbt-labs/dbt-postgres:1.9.latest
    volumes:
      - ./dbt/my_project:/usr/app
      - ./dbt:/root/.dbt
      - ./dbt/profiles.yml:/root/.dbt/profiles.yml
    working_dir: /usr/app/dbt
    environment:
      DBT_PROFILES_DIR: /root/.dbt
      # Adding host override to use container name
      POSTGRES_HOST: weather_postgres_db
    depends_on:
      - db
    networks:
      - my-network
    command: run # Change this to "run", "test", or "compile" as needed

  # Superset service definitions, lấy từ https://github.com/apache/superset
  superset:
    env_file:
      - path: docker/.env # default
        required: true
    image: apache/superset:3.0.0-py310
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app"]
    restart: unless-stopped
    ports:
      - 8088:8088
    user: *superset-user
    depends_on:
      superset-init:
        condition: service_completed_successfully
    volumes: *superset-volumes
    environment:
      SUPERSET__SQLALCHEMY_EXAMPLES_URI: "postgresql+psycopg2://examples:examples@weather_postgres_db:5432/examples_db"
      DATABASE_DB: "superset_db"
      DATABASE_DIALECT: "postgresql+psycopg2"
      DATABASE_USER: "superset"
      DATABASE_PASSWORD: "superset"
      DATABASE_HOST: "weather_postgres_db"
      DATABASE_PORT: "5432"
    networks:
      - my-network

  superset-init:
    image: apache/superset:3.0.0-py310
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file:
      - path: docker/.env # default
        required: true
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    user: *superset-user
    volumes: *superset-volumes
    environment:
      SUPERSET__SQLALCHEMY_EXAMPLES_URI: "postgresql+psycopg2://examples:examples@weather_postgres_db:5432/examples_db"
      DATABASE_DB: "superset_db"
      DATABASE_DIALECT: "postgresql+psycopg2"
      DATABASE_USER: "superset"
      DATABASE_PASSWORD: "superset"
      DATABASE_HOST: "weather_postgres_db"
      DATABASE_PORT: "5432"
    healthcheck:
      disable: true
    networks:
      - my-network

  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis:/data
    networks:
      - my-network

volumes:
  redis:
    external: false

networks:
  my-network:
    driver: bridge
